import { EOL } from 'os';
import { join, relative } from 'path';
import {
  ApiKeyScheme,
  BasicScheme,
  Method,
  OAuth2Scheme,
  SecurityScheme,
  ValidationRule,
} from './ir';
import { File, Range } from './types';

export function hasParameters(method: Method): boolean {
  return !!method.parameters.length;
}

export function hasRequiredParameters(method: Method): boolean {
  return method.parameters.some((p) => isRequired(p.value));
}

export function hasOptionalParameters(method: Method): boolean {
  return method.parameters.some((p) => !isRequired(p.value));
}

export function hasOnlyRequiredParameters(method: Method): boolean {
  return hasRequiredParameters(method) && !hasOptionalParameters(method);
}

export function hasOnlyOptionalParameters(method: Method): boolean {
  return !hasRequiredParameters(method) && hasOptionalParameters(method);
}

export function isRequired(obj: { rules?: ValidationRule[] }): boolean {
  return !!obj.rules?.some((r) => r.id === 'Required');
}

export function isEnum(obj: { rules: ValidationRule[] }): boolean {
  return obj.rules.some((r) => r.id === 'StringEnum');
}

export { encodeRange, decodeRange } from './range';

/**
 * @deprecated Use Engine instead which automatically creates a .gitattributes file
 */
export function withGitattributes(files: File[], output?: string): File[] {
  if (!files.length) return files;
  return [
    ...files,
    {
      path: [output, '.gitattributes'].filter((x): x is string => !!x),
      contents:
        warning() +
        files
          .map(
            (file) =>
              `${
                output
                  ? relative(output, join(...file.path))
                  : join(...file.path)
              } linguist-generated=true${EOL}`,
          )
          .join(''),
    },
  ];
}

const warning = () => `# This code was generated by ${
  require('../package.json').name
}@${require('../package.json').version}
#
# Changes to this file may cause incorrect behavior and will be lost if
# the code is regenerated.
#
# To learn more, visit: ${require('../package.json').homepage}

`;
