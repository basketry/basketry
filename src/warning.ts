import { title } from 'case';
import { relative, resolve } from 'path';
import { ExtendedBasketryOptions, Service } from './';
import basketry from './package';

export function* warning(
  service: Service,
  pkg: {
    name: string;
    version: string;
    homepage?: string;
  },
  options?: ExtendedBasketryOptions,
): Iterable<string> {
  const cwd = options?.basketry?.absoluteProjectPath ?? process.cwd();
  const absoluteSourcePath = resolve(cwd, service.sourcePaths[0]);

  yield `This code was generated by ${pkg.name}@${pkg.version}`;
  yield '';
  yield 'Changes to this file may cause incorrect behavior and will be lost if';
  yield 'the code is regenerated.';
  yield '';
  yield 'To make changes to the contents of this file:';
  yield `1. Edit ${relative(process.cwd(), absoluteSourcePath)}`;
  if (options?.basketry?.command) {
    yield `2. Run \`${options.basketry.command}\``;
  } else {
    yield `2. Run the Basketry CLI`;
  }
  yield '';
  yield `About Basketry: ${basketry.homepage}`;
  if (pkg.homepage && basketry.name !== pkg.name) {
    yield `About ${pkg.name}: ${pkg.homepage}`;
  }
  if (options?.basketry?.docs) {
    yield `About ${title(service.title.value)}: ${options.basketry.docs}`;
  }
}
