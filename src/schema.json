{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "title": "Service",
  "description": "Intermediate Representation (IR) of a service",
  "required": [
    "kind",
    "basketry",
    "title",
    "majorVersion",
    "sourcePath",
    "interfaces",
    "types",
    "enums",
    "unions"
  ],
  "properties": {
    "kind": { "type": "string", "const": "Service" },
    "basketry": { "type": "string", "const": "0.2" },
    "title": { "$ref": "#/definitions/string" },
    "majorVersion": { "$ref": "#/definitions/integer" },
    "sourcePath": {
      "type": "string",
      "description": "The path to the original source document for this service. All locations in the Intermediate Representation refer to ranges within this source document."
    },
    "interfaces": {
      "type": "array",
      "items": { "$ref": "#/definitions/interface" }
    },
    "types": {
      "type": "array",
      "items": { "$ref": "#/definitions/type" }
    },
    "enums": {
      "type": "array",
      "items": { "$ref": "#/definitions/enum" }
    },
    "unions": {
      "type": "array",
      "items": { "$ref": "#/definitions/union" }
    },
    "loc": { "$ref": "#/definitions/range" },
    "meta": { "$ref": "#/definitions/meta" }
  },
  "additionalProperties": false,
  "definitions": {
    "meta": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/metaValue"
      }
    },
    "metaValue": {
      "type": "object",
      "required": ["kind", "key", "value"],
      "properties": {
        "kind": { "type": "string", "const": "MetaValue" },
        "key": { "$ref": "#/definitions/string" },
        "value": {
          "type": "object",
          "required": ["kind", "value"],
          "title": "UntypedLiteral",
          "properties": {
            "kind": { "type": "string", "const": "UntypedLiteral" },
            "value": {},
            "loc": { "type": "string" }
          }
        }
      }
    },

    "interface": {
      "type": "object",
      "required": ["kind", "name", "methods"],
      "properties": {
        "kind": { "type": "string", "const": "Interface" },
        "name": { "$ref": "#/definitions/string" },
        "description": {
          "type": "array",
          "items": { "$ref": "#/definitions/string" }
        },
        "methods": {
          "type": "array",
          "items": { "$ref": "#/definitions/method" }
        },
        "protocols": { "$ref": "#/definitions/protocols" },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "method": {
      "type": "object",
      "required": ["kind", "name", "security", "parameters"],
      "properties": {
        "kind": { "type": "string", "const": "Method" },
        "name": { "$ref": "#/definitions/string" },
        "security": {
          "type": "array",
          "items": { "$ref": "#/definitions/securityOption" }
        },
        "description": {
          "type": "array",
          "items": { "$ref": "#/definitions/string" }
        },
        "parameters": {
          "type": "array",
          "items": { "$ref": "#/definitions/parameter" }
        },
        "returns": { "$ref": "#/definitions/returnValue" },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "parameter": {
      "type": "object",
      "required": ["kind", "name", "value"],
      "properties": {
        "kind": { "type": "string", "const": "Parameter" },
        "name": { "$ref": "#/definitions/string" },
        "description": {
          "type": "array",
          "items": { "$ref": "#/definitions/string" }
        },
        "value": { "$ref": "#/definitions/memberValue" },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "returnValue": {
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "required": ["kind", "value"],
          "properties": {
            "kind": { "type": "string", "const": "ReturnValue" },
            "loc": { "$ref": "#/definitions/range" },
            "meta": { "$ref": "#/definitions/meta" },
            "value": { "$ref": "#/definitions/memberValue" }
          }
        }
      ]
    },

    "type": {
      "type": "object",
      "required": ["kind", "name", "properties", "rules"],
      "properties": {
        "kind": { "type": "string", "const": "Type" },
        "name": { "$ref": "#/definitions/string" },
        "description": {
          "type": "array",
          "items": { "$ref": "#/definitions/string" }
        },
        "deprecated": { "$ref": "#/definitions/true" },
        "properties": {
          "type": "array",
          "items": { "$ref": "#/definitions/property" }
        },
        "rules": {
          "type": "array",
          "items": { "$ref": "#/definitions/objectValidationRule" }
        },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "property": {
      "type": "object",
      "required": ["kind", "name", "value"],
      "properties": {
        "kind": { "type": "string", "const": "Property" },
        "name": { "$ref": "#/definitions/string" },
        "description": {
          "type": "array",
          "items": { "$ref": "#/definitions/string" }
        },
        "value": { "$ref": "#/definitions/memberValue" },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },

    "enum": {
      "type": "object",
      "required": ["kind", "name", "members"],
      "properties": {
        "kind": { "type": "string", "const": "Enum" },
        "name": { "$ref": "#/definitions/string" },
        "description": {
          "type": "array",
          "items": { "$ref": "#/definitions/string" }
        },
        "members": {
          "type": "array",
          "items": { "$ref": "#/definitions/enumMember" },
          "minItems": 1
        },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "enumMember": {
      "type": "object",
      "required": ["kind", "content"],
      "properties": {
        "kind": { "type": "string", "const": "EnumMember" },
        "content": { "$ref": "#/definitions/string" },
        "description": {
          "type": "array",
          "items": { "$ref": "#/definitions/string" }
        },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },

    "union": {
      "discriminator": {
        "propertyName": "kind"
      },
      "oneOf": [
        { "$ref": "#/definitions/primitiveUnion" },
        { "$ref": "#/definitions/complexUnion" },
        { "$ref": "#/definitions/discriminatedUnion" }
      ]
    },
    "primitiveUnion": {
      "type": "object",
      "required": ["kind", "name", "members"],
      "description": "TODO: don't allow arrays in primitive unions",
      "properties": {
        "kind": { "type": "string", "const": "PrimitiveUnion" },
        "name": { "$ref": "#/definitions/string" },
        "members": {
          "type": "array",
          "items": { "$ref": "#/definitions/primitiveValue" },
          "minItems": 1
        },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "complexUnion": {
      "type": "object",
      "required": ["kind", "name", "members"],
      "description": "TODO: don't allow arrays, enums, or other unions in complex unions",
      "properties": {
        "kind": { "type": "string", "const": "ComplexUnion" },
        "name": { "$ref": "#/definitions/string" },
        "members": {
          "type": "array",
          "items": { "$ref": "#/definitions/complexValue" },
          "minItems": 1
        },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "discriminatedUnion": {
      "type": "object",
      "required": ["kind", "name", "discriminator", "members"],
      "description": "TODO: don't allow arrays, enums, or other unions in discriminated unions",
      "properties": {
        "kind": { "type": "string", "const": "DiscriminatedUnion" },
        "name": { "$ref": "#/definitions/string" },
        "discriminator": { "$ref": "#/definitions/string" },
        "members": {
          "type": "array",
          "items": { "$ref": "#/definitions/complexValue" },
          "minItems": 1
        },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },

    "primitive": {
      "description": "The name of a primitive type.",
      "type": "string",
      "enum": [
        "string",
        "number",
        "integer",
        "long",
        "float",
        "double",
        "boolean",
        "date",
        "date-time",
        "binary",
        "untyped"
      ]
    },
    "primitiveLiteral": {
      "type": "object",
      "required": ["kind", "value"],
      "properties": {
        "kind": { "type": "string", "const": "PrimitiveLiteral" },
        "value": { "$ref": "#/definitions/primitive" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "primitiveValue": {
      "type": "object",
      "required": ["kind", "typeName", "rules"],
      "properties": {
        "kind": { "type": "string", "const": "PrimitiveValue" },
        "typeName": { "$ref": "#/definitions/primitiveLiteral" },
        "isArray": { "$ref": "#/definitions/true" },
        "constant": {
          "oneOf": [
            { "$ref": "#/definitions/string" },
            { "$ref": "#/definitions/number" },
            { "$ref": "#/definitions/boolean" }
          ]
        },
        "default": {
          "description": "TODO: add null literal",
          "oneOf": [
            { "$ref": "#/definitions/string" },
            { "$ref": "#/definitions/number" },
            { "$ref": "#/definitions/boolean" }
          ]
        },
        "rules": {
          "type": "array",
          "items": { "$ref": "#/definitions/validationRule" }
        }
      }
    },
    "complexValue": {
      "type": "object",
      "required": ["kind", "typeName", "rules"],
      "properties": {
        "kind": { "type": "string", "const": "ComplexValue" },
        "typeName": {
          "description": "The name of a type, enum, or union defined in this Service.",
          "$ref": "#/definitions/string"
        },
        "isArray": { "$ref": "#/definitions/true" },
        "rules": {
          "type": "array",
          "items": { "$ref": "#/definitions/validationRule" }
        }
      }
    },
    "memberValue": {
      "discriminator": {
        "propertyName": "kind"
      },
      "oneOf": [
        { "$ref": "#/definitions/primitiveValue" },
        { "$ref": "#/definitions/complexValue" }
      ]
    },

    "protocols": {
      "type": "object",
      "required": ["kind"],
      "properties": {
        "kind": { "type": "string", "const": "InterfaceProtocols" },
        "http": {
          "type": "array",
          "items": { "$ref": "#/definitions/httpRoute" }
        }
      },
      "additionalProperties": false
    },
    "httpVerb": {
      "type": "string",
      "enum": [
        "get",
        "post",
        "put",
        "patch",
        "delete",
        "head",
        "options",
        "trace"
      ]
    },
    "httpStatusCodeLiteral": {
      "type": "object",
      "required": ["kind", "value"],
      "properties": {
        "kind": { "type": "string", "const": "HttpStatusCodeLiteral" },
        "value": { "type": "integer", "minimum": 100, "maximum": 599 },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "httpVerbLiteral": {
      "type": "object",
      "required": ["kind", "value"],
      "properties": {
        "kind": { "type": "string", "const": "HttpVerbLiteral" },
        "value": { "$ref": "#/definitions/httpVerb" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "httpLocation": {
      "type": "string",
      "enum": ["header", "query", "path", "formData", "body"]
    },
    "httpLocationLiteral": {
      "type": "object",
      "required": ["kind", "value"],
      "properties": {
        "kind": { "type": "string", "const": "HttpLocationLiteral" },
        "value": { "$ref": "#/definitions/httpLocation" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "httpArrayFormat": {
      "type": "string",
      "enum": ["csv", "ssv", "tsv", "pipes", "multi"]
    },
    "httpArrayFormatLiteral": {
      "type": "object",
      "required": ["kind", "value"],
      "properties": {
        "kind": { "type": "string", "const": "HttpArrayFormatLiteral" },
        "value": { "$ref": "#/definitions/httpArrayFormat" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "httpRoute": {
      "type": "object",
      "required": ["kind", "pattern", "methods"],
      "properties": {
        "kind": { "type": "string", "const": "HttpRoute" },
        "pattern": { "$ref": "#/definitions/string" },
        "methods": {
          "type": "array",
          "items": { "$ref": "#/definitions/httpMethod" }
        },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "httpMethod": {
      "type": "object",
      "required": [
        "kind",
        "name",
        "verb",
        "parameters",
        "successCode",
        "requestMediaTypes",
        "responseMediaTypes"
      ],
      "properties": {
        "kind": { "type": "string", "const": "HttpMethod" },
        "name": { "$ref": "#/definitions/string" },
        "verb": { "$ref": "#/definitions/httpVerbLiteral" },
        "parameters": {
          "type": "array",
          "items": { "$ref": "#/definitions/httpParameter" }
        },
        "successCode": { "$ref": "#/definitions/httpStatusCodeLiteral" },
        "requestMediaTypes": {
          "type": "array",
          "items": { "$ref": "#/definitions/string" }
        },
        "responseMediaTypes": {
          "type": "array",
          "items": { "$ref": "#/definitions/string" }
        },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "httpParameter": {
      "type": "object",
      "required": ["kind", "name", "location"],
      "properties": {
        "kind": { "type": "string", "const": "HttpParameter" },
        "name": { "$ref": "#/definitions/string" },
        "location": { "$ref": "#/definitions/httpLocationLiteral" },
        "arrayFormat": { "$ref": "#/definitions/httpArrayFormatLiteral" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },

    "securityOption": {
      "type": "object",
      "required": ["kind", "schemes"],
      "properties": {
        "kind": { "type": "string", "const": "SecurityOption" },
        "schemes": {
          "type": "array",
          "items": { "$ref": "#/definitions/securityScheme" }
        },
        "loc": { "$ref": "#/definitions/range" }
      }
    },
    "securityScheme": {
      "discriminator": {
        "propertyName": "kind"
      },
      "oneOf": [
        { "$ref": "#/definitions/basicScheme" },
        { "$ref": "#/definitions/apiKeyScheme" },
        { "$ref": "#/definitions/oAuth2Scheme" }
      ]
    },
    "basicScheme": {
      "type": "object",
      "required": ["kind", "type", "name"],
      "properties": {
        "kind": { "type": "string", "const": "BasicScheme" },
        "type": {
          "type": "object",
          "required": ["value"],
          "properties": {
            "value": {
              "type": "string",
              "const": "basic"
            },
            "loc": { "$ref": "#/definitions/range" }
          },
          "additionalProperties": false
        },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "name": { "$ref": "#/definitions/string" },
        "description": { "$ref": "#/definitions/string" },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "apiKeyScheme": {
      "type": "object",
      "required": ["kind", "type", "name", "parameter", "in"],
      "properties": {
        "kind": { "type": "string", "const": "ApiKeyScheme" },
        "type": {
          "type": "object",
          "required": ["value"],
          "properties": {
            "value": {
              "type": "string",
              "const": "apiKey"
            },
            "loc": { "$ref": "#/definitions/range" }
          },
          "additionalProperties": false
        },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "name": { "$ref": "#/definitions/string" },
        "description": {
          "type": "array",
          "items": { "$ref": "#/definitions/string" }
        },
        "parameter": { "$ref": "#/definitions/string" },
        "in": {
          "type": "object",
          "required": ["value"],
          "properties": {
            "value": {
              "type": "string",
              "enum": ["header", "query", "cookie"]
            },
            "loc": { "$ref": "#/definitions/range" }
          },
          "additionalProperties": false
        },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "oAuth2Scheme": {
      "type": "object",
      "required": ["kind", "type", "name", "flows"],
      "properties": {
        "kind": { "type": "string", "const": "OAuth2Scheme" },
        "type": {
          "type": "object",
          "required": ["value"],
          "properties": {
            "value": { "type": "string", "const": "oauth2" },
            "loc": { "$ref": "#/definitions/range" }
          },
          "additionalProperties": false
        },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "name": { "$ref": "#/definitions/string" },
        "description": {
          "type": "array",
          "items": { "$ref": "#/definitions/string" }
        },
        "flows": {
          "type": "array",
          "items": { "$ref": "#/definitions/oAuth2Flow" }
        },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "oAuth2Flow": {
      "discriminator": {
        "propertyName": "kind"
      },
      "oneOf": [
        { "$ref": "#/definitions/oAuth2ImplicitFlow" },
        { "$ref": "#/definitions/oAuth2PasswordFlow" },
        { "$ref": "#/definitions/oAuth2ClientCredentialsFlow" },
        { "$ref": "#/definitions/oAuth2AuthorizationCodeFlow" }
      ]
    },
    "oAuth2ImplicitFlow": {
      "type": "object",
      "required": ["kind", "type", "authorizationUrl", "scopes"],
      "properties": {
        "kind": { "type": "string", "const": "OAuth2ImplicitFlow" },
        "type": {
          "type": "object",
          "required": ["value"],
          "properties": {
            "value": { "type": "string", "const": "implicit" },
            "loc": { "$ref": "#/definitions/range" }
          },
          "additionalProperties": false
        },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "authorizationUrl": { "$ref": "#/definitions/string" },
        "refreshUrl": { "$ref": "#/definitions/string" },
        "scopes": {
          "type": "array",
          "items": { "$ref": "#/definitions/oAuth2Scope" }
        },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "oAuth2PasswordFlow": {
      "type": "object",
      "required": ["kind", "type", "tokenUrl", "scopes"],
      "properties": {
        "kind": { "type": "string", "const": "OAuth2PasswordFlow" },
        "type": {
          "type": "object",
          "required": ["value"],
          "properties": {
            "value": { "type": "string", "const": "password" },
            "loc": { "$ref": "#/definitions/range" }
          },
          "additionalProperties": false
        },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "tokenUrl": { "$ref": "#/definitions/string" },
        "refreshUrl": { "$ref": "#/definitions/string" },
        "scopes": {
          "type": "array",
          "items": { "$ref": "#/definitions/oAuth2Scope" }
        },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "oAuth2ClientCredentialsFlow": {
      "type": "object",
      "required": ["kind", "type", "tokenUrl", "scopes"],
      "properties": {
        "kind": { "type": "string", "const": "OAuth2ClientCredentialsFlow" },
        "type": {
          "type": "object",
          "required": ["value"],
          "properties": {
            "value": { "type": "string", "const": "clientCredentials" },
            "loc": { "$ref": "#/definitions/range" }
          },
          "additionalProperties": false
        },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "tokenUrl": { "$ref": "#/definitions/string" },
        "refreshUrl": { "$ref": "#/definitions/string" },
        "scopes": {
          "type": "array",
          "items": { "$ref": "#/definitions/oAuth2Scope" }
        },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "oAuth2AuthorizationCodeFlow": {
      "type": "object",
      "required": ["kind", "type", "authorizationUrl", "tokenUrl", "scopes"],
      "properties": {
        "kind": { "type": "string", "const": "OAuth2AuthorizationCodeFlow" },
        "type": {
          "type": "object",
          "required": ["value"],
          "properties": {
            "value": { "type": "string", "const": "authorizationCode" },
            "loc": { "$ref": "#/definitions/range" }
          },
          "additionalProperties": false
        },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "authorizationUrl": { "$ref": "#/definitions/string" },
        "tokenUrl": { "$ref": "#/definitions/string" },
        "refreshUrl": { "$ref": "#/definitions/string" },
        "scopes": {
          "type": "array",
          "items": { "$ref": "#/definitions/oAuth2Scope" }
        },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },
    "oAuth2Scope": {
      "type": "object",
      "required": ["kind", "name", "description"],
      "properties": {
        "kind": { "type": "string", "const": "OAuth2Scope" },
        "name": { "$ref": "#/definitions/string" },
        "description": {
          "type": "array",
          "items": { "$ref": "#/definitions/string" }
        },
        "deprecated": { "$ref": "#/definitions/deprecated" },
        "loc": { "$ref": "#/definitions/range" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": false
    },

    "string": {
      "type": "object",
      "required": ["kind", "value"],
      "title": "StringLiteral",
      "description": "A string literal",
      "properties": {
        "kind": { "type": "string", "const": "StringLiteral" },
        "value": { "type": "string" },
        "loc": {
          "description": "The location of this in the doc.",
          "$ref": "#/definitions/range"
        }
      },
      "additionalProperties": false
    },
    "integer": {
      "type": "object",
      "required": ["kind", "value"],
      "title": "IntegerLiteral",
      "description": "An integer literal",
      "properties": {
        "kind": { "type": "string", "const": "IntegerLiteral" },
        "value": { "type": "integer" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "number": {
      "type": "object",
      "required": ["kind", "value"],
      "title": "NumberLiteral",
      "description": "A number literal",
      "properties": {
        "kind": { "type": "string", "const": "NumberLiteral" },
        "value": { "type": "integer" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "boolean": {
      "type": "object",
      "required": ["kind", "value"],
      "title": "BooleanLiteral",
      "description": "A boolean literal",
      "properties": {
        "kind": { "type": "string", "const": "BooleanLiteral" },
        "value": { "type": "boolean" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "true": {
      "type": "object",
      "required": ["kind", "value"],
      "title": "TrueLiteral",
      "description": "A boolean literal whose value is always true",
      "properties": {
        "kind": { "type": "string", "const": "TrueLiteral" },
        "value": { "type": "boolean", "const": true },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "nonEmptyString": {
      "type": "object",
      "required": ["kind", "value"],
      "title": "NonEmptyStringLiteral",
      "description": "A string literal",
      "properties": {
        "kind": { "type": "string", "const": "NonEmptyStringLiteral" },
        "value": { "type": "string" },
        "loc": {
          "description": "The location of this in the doc.",
          "$ref": "#/definitions/range"
        }
      },
      "additionalProperties": false
    },
    "nonNegativeInteger": {
      "type": "object",
      "required": ["kind", "value"],
      "title": "NonNegativeIntegerLiteral",
      "properties": {
        "kind": { "type": "string", "const": "NonNegativeIntegerLiteral" },
        "value": { "type": "integer", "minimum": 0, "multipleOf": 1 },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "nonNegativeNumber": {
      "type": "object",
      "required": ["kind", "value"],
      "title": "NonNegativeNumberLiteral",
      "properties": {
        "kind": { "type": "string", "const": "NonNegativeNumberLiteral" },
        "value": { "type": "number", "minimum": 0 },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },

    "deprecated": {
      "description": "A boolean value indicating that this item is deprecated.",
      "$ref": "#/definitions/true"
    },
    "range": {
      "type": "string"
    },

    "validationRule": {
      "discriminator": {
        "propertyName": "id"
      },
      "oneOf": [
        { "$ref": "#/definitions/requiredRule" },
        { "$ref": "#/definitions/constantRule" },
        { "$ref": "#/definitions/stringMaxLengthRule" },
        { "$ref": "#/definitions/stringMinLengthRule" },
        { "$ref": "#/definitions/stringPatternRule" },
        { "$ref": "#/definitions/stringFormatRule" },
        { "$ref": "#/definitions/stringEnumRule" },
        { "$ref": "#/definitions/numberMultipleOfRule" },
        { "$ref": "#/definitions/numberGtRule" },
        { "$ref": "#/definitions/numberGteRule" },
        { "$ref": "#/definitions/numberLtRule" },
        { "$ref": "#/definitions/numberLteRule" },
        { "$ref": "#/definitions/arrayMaxItemsRule" },
        { "$ref": "#/definitions/arrayMinItemsRule" },
        { "$ref": "#/definitions/arrayUniqueItemsRule" }
      ]
    },
    "requiredRule": {
      "title": "RequiredRule",
      "type": "object",
      "required": ["kind", "id"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "Required"
        }
      },
      "additionalProperties": false
    },
    "constantRule": {
      "title": "ConstantRule",
      "type": "object",
      "required": ["kind", "id", "value"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "Constant"
        },
        "value": {
          "oneOf": [
            { "$ref": "#/definitions/string" },
            { "$ref": "#/definitions/number" },
            { "$ref": "#/definitions/boolean" }
          ]
        }
      },
      "additionalProperties": false
    },
    "stringMaxLengthRule": {
      "title": "StringMaxLengthRule",
      "type": "object",
      "required": ["kind", "id", "length"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "StringMaxLength"
        },
        "length": { "$ref": "#/definitions/nonNegativeInteger" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "stringMinLengthRule": {
      "title": "StringMinLengthRule",
      "type": "object",
      "required": ["kind", "id", "length"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "StringMinLength"
        },
        "length": { "$ref": "#/definitions/nonNegativeInteger" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "stringPatternRule": {
      "title": "StringPatternRule",
      "type": "object",
      "required": ["kind", "id", "pattern"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "StringPattern"
        },
        "pattern": { "$ref": "#/definitions/nonEmptyString" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "stringFormatRule": {
      "title": "StringFormatRule",
      "type": "object",
      "required": ["kind", "id", "format"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "StringFormat"
        },
        "format": { "$ref": "#/definitions/nonEmptyString" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "stringEnumRule": {
      "title": "StringEnumRule",
      "type": "object",
      "required": ["kind", "id", "values"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "StringEnum"
        },
        "values": {
          "type": "array",
          "items": { "$ref": "#/definitions/string" },
          "minItems": 1
        },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "numberMultipleOfRule": {
      "title": "NumberMultipleOfRule",
      "type": "object",
      "required": ["kind", "id", "value"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "NumberMultipleOf"
        },
        "value": { "$ref": "#/definitions/nonNegativeNumber" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "numberGtRule": {
      "title": "NumberGtRule",
      "type": "object",
      "required": ["kind", "id", "value"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "NumberGT"
        },
        "value": { "$ref": "#/definitions/number" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "numberGteRule": {
      "title": "NumberGteRule",
      "type": "object",
      "required": ["kind", "id", "value"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "NumberGTE"
        },
        "value": { "$ref": "#/definitions/number" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "numberLtRule": {
      "title": "NumberLtRule",
      "type": "object",
      "required": ["kind", "id", "value"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "NumberLT"
        },
        "value": { "$ref": "#/definitions/number" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "numberLteRule": {
      "title": "NumberLteRule",
      "type": "object",
      "required": ["kind", "id", "value"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "NumberLTE"
        },
        "value": { "$ref": "#/definitions/number" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "arrayMaxItemsRule": {
      "title": "ArrayMaxItemsRule",
      "type": "object",
      "required": ["kind", "id", "max"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "ArrayMaxItems"
        },
        "max": { "$ref": "#/definitions/nonNegativeNumber" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "arrayMinItemsRule": {
      "title": "ArrayMinItemsRule",
      "type": "object",
      "required": ["kind", "id", "min"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "ArrayMinItems"
        },
        "min": { "$ref": "#/definitions/nonNegativeNumber" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "arrayUniqueItemsRule": {
      "title": "ArrayUniqueItemsRule",
      "type": "object",
      "required": ["kind", "id", "required"],
      "properties": {
        "kind": { "type": "string", "const": "ValidationRule" },
        "id": {
          "type": "string",
          "const": "ArrayUniqueItems"
        },
        "required": {
          "type": "boolean"
        },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },

    "objectValidationRule": {
      "discriminator": {
        "propertyName": "id"
      },
      "oneOf": [
        { "$ref": "#/definitions/objectMinPropertiesRule" },
        { "$ref": "#/definitions/objectMaxPropertiesRule" },
        { "$ref": "#/definitions/objectAdditionalPropertiesRule" }
      ]
    },
    "objectMinPropertiesRule": {
      "title": "ObjectMinPropertiesRule",
      "type": "object",
      "required": ["kind", "id", "min"],
      "properties": {
        "kind": { "type": "string", "const": "ObjectValidationRule" },
        "id": {
          "type": "string",
          "const": "ObjectMinProperties"
        },
        "min": { "$ref": "#/definitions/nonNegativeInteger" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "objectMaxPropertiesRule": {
      "title": "ObjectMaxPropertiesRule",
      "type": "object",
      "required": ["kind", "id", "max"],
      "properties": {
        "kind": { "type": "string", "const": "ObjectValidationRule" },
        "id": {
          "type": "string",
          "const": "ObjectMaxProperties"
        },
        "max": { "$ref": "#/definitions/nonNegativeInteger" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    },
    "objectAdditionalPropertiesRule": {
      "title": "ObjectAdditionalPropertiesRule",
      "type": "object",
      "required": ["kind", "id", "forbidden"],
      "properties": {
        "kind": { "type": "string", "const": "ObjectValidationRule" },
        "id": {
          "type": "string",
          "const": "ObjectAdditionalProperties"
        },
        "forbidden": { "$ref": "#/definitions/true" },
        "loc": { "$ref": "#/definitions/range" }
      },
      "additionalProperties": false
    }
  }
}
